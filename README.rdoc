== has_ratings http://travis-ci.org/pluginaweek/has_ratings.png

+has_ratings+ demonstrates a reference implementation for handling ratings.

== Resources

API

* http://rdoc.info/github/pluginaweek/has_ratings/master/frames

Bugs

* http://github.com/pluginaweek/has_ratings/issues

Development

* http://github.com/pluginaweek/has_ratings

Testing

* http://travis-ci.org/pluginaweek/has_ratings

Source

* git://github.com/pluginaweek/has_ratings.git

Mailing List

* http://groups.google.com/group/pluginaweek-talk

== Description

Storing ratings is a pretty common task when building web applications with a
community-based focus.  Ratings can have names and values associated with them.
This plugin demonstrate a simple way to manage what ratings can be used and
how they are persisted.

== Usage

Note that this is a reference implementation and, most likely, should be
modified for your own usage.

=== Installation

+has_ratings+ requires additional database tables to work.  You can generate
a migration for these tables like so:

  script/generate has_ratings

Then simply migrate your database:

  rake db:migrate

=== Example

  user = User.find(1)
  video = Video.find(1)
  
  video.ratings.create(:rater => user, :value => 'poor')
  video.ratings.average   # => 1.0

== Assets

Included with the plugin are image/stylesheet assets for creating raters using
css as described at http://www.komodomedia.com/blog/2007/01/css-star-rating-redux

== Testing

Before you can run any tests, the following gem must be installed:
* plugin_test_helper[http://github.com/pluginaweek/plugin_test_helper]

To run against a specific version of Rails:

  rake test RAILS_FRAMEWORK_ROOT=/path/to/rails

== Dependencies

* Rails 2.3 or later
* enumerate_by[http://github.com/pluginaweek/enumerate_by] 0.4.0 or later
